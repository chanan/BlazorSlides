<section class="@_currentSlideClass">
    @foreach (ISlideWithContent slide in CurrentSlide.VerticalSlides)
    {
        <Content CurrentSlide="@slide" CurrentHorizontalIndex="@CurrentHorizontalIndex" CurrentVerticalIndex="@CurrentVerticalIndex" />
    }
</section>

<Styled @bind-Classname="@_slide">
    label: section;
    display: none;
    position: absolute;
    width: 100%;
    padding: 20px 0px;
    pointer-events: auto;
    z-index: 10;
    -webkit-transform-style: flat;
    transform-style: flat;
    transition: -webkit-transform-origin 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), -webkit-transform 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), visibility 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), opacity 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
    transition: transform-origin 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), transform 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), visibility 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985), opacity 800ms cubic-bezier(0.26, 0.86, 0.44, 0.985);
    -webkit-perspective: 600px;
    perspective: 600px;
</Styled>

<Styled @bind-Classname="@_center">
    label: center;
    min-height: 0 !important;
</Styled>

<Styled @bind-Classname="@_present">
    label: present;
    display: block;
    z-index: 11;
    opacity: 1;
</Styled>

<Styled @bind-Classname="@_notPresent">
    label: not-present;
    pointer-events: none;
    opacity: 0;
</Styled>

<Styled @bind-Classname="@_future">
    label: future;
    pointer-events: none;
</Styled>

<Styled @bind-Classname="@_past">
    label: past;
    pointer-events: none;
</Styled>

<Styled @bind-Classname="@_stack">
    label: stack;
    padding-top: 0;
    padding-bottom: 0;
    pointer-events: none;
    height: 100%;
</Styled>

<Styled @bind-Classname="@_currentSlideClass"
    ComposeSlide="@_slide"
    ComposeCenter="@_center"
    ComposeStack="@_stack"
    ComposePresent="@_present" ComposePresentIf="@(IsPresent())"
    ComposeNotPresent="@_notPresent" ComposeNotPresentIf="@(!IsPresent())"
    ComposePast="@_past" ComposePastIf="@(!IsPresent() && IsPast())"
    ComposeFuture="@_future" ComposeFutureIf="@(!IsPresent() && !IsPast())"
/>

@code {
    //Styles
    private string _stack;
    private string _currentSlideClass;
    private string _slide;
    private string _center;
    private string _notPresent;
    private string _future;
    private string _present;
    private string _past;

    [Parameter] public int CurrentHorizontalIndex { get; set; }
    [Parameter] public int CurrentVerticalIndex { get; set; }
    [Parameter] public ISlideContainer CurrentSlide { get; set; }

    private bool IsPresent()
    {
        return ((ISlide)CurrentSlide).HorizontalIndex == CurrentHorizontalIndex;
    }

    private bool IsPast()
    {
        return ((ISlide)CurrentSlide).HorizontalIndex < CurrentHorizontalIndex;
    }
}